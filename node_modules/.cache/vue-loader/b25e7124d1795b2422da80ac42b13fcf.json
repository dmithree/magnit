{"remainingRequest":"/Users/borisenkov_ds/Documents/GitHub/designsystem/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/borisenkov_ds/Documents/GitHub/designsystem/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/borisenkov_ds/Documents/GitHub/designsystem/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/borisenkov_ds/Documents/GitHub/designsystem/src/views/foundations/Color.vue?vue&type=template&id=64ff0dea&scoped=true&","dependencies":[{"path":"/Users/borisenkov_ds/Documents/GitHub/designsystem/src/views/foundations/Color.vue","mtime":1638277667085},{"path":"/Users/borisenkov_ds/Documents/GitHub/designsystem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/borisenkov_ds/Documents/GitHub/designsystem/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/borisenkov_ds/Documents/GitHub/designsystem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/borisenkov_ds/Documents/GitHub/designsystem/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}